#!/bin/bash

# Script de Verifica√ß√£o e Diagn√≥stico do N8N
echo "üîç VERIFICA√á√ÉO DO STATUS DO N8N"
echo "=============================="

# Verificar se o usu√°rio n8n existe
if id "n8n" &>/dev/null; then
    echo "‚úÖ Usu√°rio n8n existe"
else
    echo "‚ùå Usu√°rio n8n n√£o existe"
    exit 1
fi

# Verificar se N8N est√° instalado
if command -v n8n &> /dev/null; then
    echo "‚úÖ N8N est√° instalado globalmente"
    echo "   Vers√£o: $(n8n --version)"
else
    echo "‚ùå N8N n√£o est√° instalado"
fi

# Verificar se PM2 est√° instalado
if command -v pm2 &> /dev/null; then
    echo "‚úÖ PM2 est√° instalado"
    echo "   Vers√£o: $(pm2 --version)"
else
    echo "‚ùå PM2 n√£o est√° instalado"
fi

echo ""
echo "üìä STATUS DOS PROCESSOS:"
echo "========================"

# Status do PM2
echo "üîÑ Status do PM2:"
sudo su - n8n -c "pm2 status" 2>/dev/null || echo "‚ùå PM2 n√£o est√° rodando ou n√£o configurado"

echo ""
echo "üî• STATUS DO FIREWALL:"
echo "====================="
sudo ufw status

echo ""
echo "üìÅ ESTRUTURA DE ARQUIVOS:"
echo "========================"

# Verificar diret√≥rios importantes
directories=(
    "/home/n8n"
    "/home/n8n/.n8n"
    "/opt/n8n-data"
    "/var/log/n8n"
)

for dir in "${directories[@]}"; do
    if [ -d "$dir" ]; then
        echo "‚úÖ $dir existe"
        echo "   Propriedade: $(ls -ld $dir | awk '{print $3":"$4}')"
    else
        echo "‚ùå $dir n√£o existe"
    fi
done

# Verificar arquivos importantes
files=(
    "/home/n8n/.n8n/config.env"
    "/home/n8n/ecosystem.config.js"
    "/opt/n8n-data/database.sqlite"
)

echo ""
echo "üìÑ ARQUIVOS IMPORTANTES:"
for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file existe"
        echo "   Tamanho: $(ls -lh $file | awk '{print $5}')"
    else
        echo "‚ùå $file n√£o existe"
    fi
done

echo ""
echo "üåê CONECTIVIDADE:"
echo "================"

# Obter IP externo
EXTERNAL_IP=$(curl -s ifconfig.me 2>/dev/null)
if [ ! -z "$EXTERNAL_IP" ]; then
    echo "‚úÖ IP externo: $EXTERNAL_IP"
    echo "üåê URL do N8N: http://$EXTERNAL_IP:5678"
else
    echo "‚ùå N√£o foi poss√≠vel obter IP externo"
fi

# Verificar se a porta 5678 est√° ouvindo
if ss -tuln | grep -q ":5678 "; then
    echo "‚úÖ Porta 5678 est√° ouvindo"
else
    echo "‚ùå Porta 5678 n√£o est√° ouvindo"
fi

echo ""
echo "üìù LOGS RECENTES:"
echo "================"

# Mostrar logs recentes
if [ -f "/var/log/n8n/combined.log" ]; then
    echo "üîç √öltimas 10 linhas do log:"
    tail -10 /var/log/n8n/combined.log
else
    echo "‚ùå Arquivo de log n√£o encontrado"
fi

echo ""
echo "üîß COMANDOS DE SOLU√á√ÉO:"
echo "======================"

# Verificar se PM2 est√° rodando N8N
N8N_STATUS=$(sudo su - n8n -c "pm2 describe n8n" 2>/dev/null | grep -c "online" || echo "0")

if [ "$N8N_STATUS" -eq 0 ]; then
    echo "‚ùå N8N n√£o est√° rodando. Execute:"
    echo "   sudo su - n8n -c 'pm2 start ecosystem.config.js'"
    echo "   sudo su - n8n -c 'pm2 save'"
else
    echo "‚úÖ N8N est√° rodando via PM2"
fi

echo ""
echo "üõ†Ô∏è COMANDOS √öTEIS:"
echo "   Reiniciar N8N: sudo su - n8n -c 'pm2 restart n8n'"
echo "   Ver logs em tempo real: sudo su - n8n -c 'pm2 logs n8n'"
echo "   Parar N8N: sudo su - n8n -c 'pm2 stop n8n'"
echo "   Status detalhado: sudo su - n8n -c 'pm2 describe n8n'"

echo ""
echo "üîÑ TESTE DE CONECTIVIDADE LOCAL:"
echo "==============================="

# Teste local
LOCAL_TEST=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5678 2>/dev/null || echo "000")
if [ "$LOCAL_TEST" = "200" ]; then
    echo "‚úÖ N8N responde localmente"
elif [ "$LOCAL_TEST" = "000" ]; then
    echo "‚ùå N8N n√£o responde localmente (n√£o est√° rodando)"
else
    echo "‚ö†Ô∏è N8N responde com c√≥digo: $LOCAL_TEST"
fi 